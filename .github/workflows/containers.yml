name: "📦🐳 container images"

on:
  push:
    tags: '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        description: 'version to tag images'
        required: true

jobs:
  set-version:
    runs-on: ubuntu-latest
    outputs:
      version: ${{ steps.output_version.outputs.version }}
    steps:
    - name: set VERSION value from dispatch inputs
      id: get_version_dispatch
      if: ${{ github.event_name == 'workflow_dispatch' }} 
      run: echo "VERSION=${{ github.event.inputs.version }}" >> $GITHUB_ENV
    - name: set VERSION value from pushed tag
      id: get_version_tag
      if: ${{ github.event_name == 'push' }} 
      run: echo "VERSION=$(echo "${{ github.ref }}" | cut -d/ -f3)" >> $GITHUB_ENV
    - name: output result into an env-var
      id: output_version
      run: |
        echo "version=${{ env.VERSION }}" >> $GITHUB_OUTPUT
  check-deployment:
    runs-on: ubuntu-latest
    needs: ['set-version']
    steps:
    - name: wait up to 20 minutes for the new clams-python is deployed on pypi
      uses: nev7n/wait_for_response@v1
      with:
        url: "https://pypi.org/project/clams-python/${{ needs.set-version.outputs.version }}/"
        responseCode: 200
        timeout: 1200000
        interval: 5000

  call-build-base:
    needs: ['set-version', 'check-deployment']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/Containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-tf2:
    needs: ['set-version', 'call-build-base']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/tf2.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-torch:
    needs: ['set-version', 'call-build-base']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/torch.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-torch2:
    needs: ['set-version', 'call-build-base']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/torch2.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-ffmpeg:
    needs: ['set-version', 'call-build-base']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/ffmpeg.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-ffmpeg-tf2:
    needs: ['set-version', 'call-build-ffmpeg']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/ffmpeg-tf2.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-ffmpeg-torch:
    needs: ['set-version', 'call-build-ffmpeg']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/ffmpeg-torch.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-ffmpeg-torch2:
    needs: ['set-version', 'call-build-ffmpeg']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/ffmpeg-torch2.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-opencv4:
    needs: ['set-version', 'call-build-ffmpeg']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/opencv4.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-opencv4-tf2:
    needs: ['set-version', 'call-build-opencv4']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/opencv4-tf2.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-opencv4-torch:
    needs: ['set-version', 'call-build-opencv4']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/opencv4-torch.containerfile'
      version: ${{ needs.set-version.outputs.version }}

  call-build-opencv4-torch2:
    needs: ['set-version', 'call-build-opencv4']
    uses: ./.github/workflows/container.yml
    secrets: inherit
    with:
      buildfilename: './container/opencv4-torch2.containerfile'
      version: ${{ needs.set-version.outputs.version }}

