name: build docker images and upload to docker hub

on: 
  push: 
    tags: '[0-9]+.[0-9]+.[0-9]+'
  workflow_dispatch:
    inputs:
      version:
        description: 'version to tag images'
        required: true
jobs:
  check-deployment:
    runs-on: ubuntu-latest
    steps:
    - name: wait up to 20 minutes for the new clams-python is deployed on pypi
      uses: nev7n/wait_for_response@v1
      with:
        url: "https://pypi.org/project/clams-python/${{ github.event.inputs.version }}/"
        responseCode: 200
        timeout: 1200000
        interval: 5000
  build-and-upload:
    runs-on: ubuntu-latest
    env:
      OS: linux
      PYTHON: '3.8'
    needs: ['check-deployment']
    steps:
    - name: checkout the repo 
      uses: actions/checkout@v2
    - name: setup python
      uses: actions/setup-python@v2
      with:
        python-version: 3.8
    - name: set up QEMU
      uses: docker/setup-qemu-action@v1
    - name: set up docker buildx
      uses: docker/setup-buildx-action@v1
    - name: docker hub login
      uses: docker/login-action@v1
      with:
        username: clamsbot
        password: ${{ secrets.DOCKERHUB_CLAMSBOT_TOKEN }}

    - name: generate tags for the base docker image
      id: meta
      uses: docker/metadata-action@v4
      with:
        images: ${{ github.repository }}
        tags: |
            type=semver,pattern={{version}}
            type=semver,pattern={{major}}.{{minor}}
            type=semver,pattern={{major}}
            type=semver,pattern=v{{major}}
    - name: build docker image and push to the hub using the tags
      id: base_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/Dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build tf2-enabled docker image and push to the hub using the tags
      id: tf2_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/tf2.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-tf2
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build torch-enabled docker image and push to the hub using the tags
      id: torch_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/torch.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-torch
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build ffmpeg-enabled docker image and push to the hub using the tags
      id: ffmpeg_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/ffmpeg.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-ffmpeg
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build ffmpeg-tf2-enabled docker image and push to the hub using the tags
      id: ffmpeg_tf2_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/ffmpeg-tf2.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-ffmpeg-tf2
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build ffmpeg-torch-enabled docker image and push to the hub using the tags
      id: ffmpeg_torch_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/ffmpeg-torch.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-ffmpeg-torch
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build opencv4-enabled docker image and push to the hub using the tags
      id: opencv4_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/opencv4.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-opencv4
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build opencv4-tf2-enabled docker image and push to the hub using the tags
      id: opencv4_tf2_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/opencv4-tf2.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-opencv4-tf2
        build-args: |
          clams_version=${{ github.event.inputs.version }}

    - name: build opencv4-torch-enabled docker image and push to the hub using the tags
      id: opencv4_torch_docker_build
      uses: docker/build-push-action@v2
      with:
        push: true
        context: docker
        file: ./docker/opencv4-torch.dockerfile
        tags: ${{ steps.meta.outputs.tag }}
        labels: ${{ steps.meta.outputs.labels }}-opencv4-torch
        build-args: |
          clams_version=${{ github.event.inputs.version }}
